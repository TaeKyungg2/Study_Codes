{
    "version": "2.0.0",
    "runner": "terminal",
    "type": "shell",
    "echoCommand": true,
    "presentation": {
        "reveal": "always"
    },
    "tasks": [
        {
            "label": "build and run active file",
            "type": "shell",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"],
            "dependsOn": [
                "compile active file"
            ],
            "windows": {
                "command": "${fileDirname}\\${fileBasenameNoExtension}.exe"
            },
            "osx": {
                "command": "${fileDirname}/${fileBasenameNoExtension}"
            },
            "linux": {
                "command": "${fileDirname}/${fileBasenameNoExtension}"
            }
        },
        {
            "label": "compile active file",
            "type": "shell",
            "problemMatcher": ["$gcc"],
            "windows": {
                "command": "cmd",
                "args": [
                    "/c",
                    "if %fileExtname%==.c (gcc \"%file%\" -g -o \"%fileDirname%\\%fileBasenameNoExtension%.exe\") else (g++ \"%file%\" -g -o \"%fileDirname%\\%fileBasenameNoExtension%.exe\")"
                ]
            },
            "osx": {
                "command": "sh",
                "args": [
                    "-c",
                    "if [ '${fileExtname}' = '.c' ]; then gcc '${file}' -g -o '${fileDirname}/${fileBasenameNoExtension}'; else clang++ '${file}' -g -o '${fileDirname}/${fileBasenameNoExtension}'; fi"
                ]
            },
            "linux": {
                "command": "sh",
                "args": [
                    "-c",
                    "if [ '${fileExtname}' = '.c' ]; then gcc '${file}' -g -o '${fileDirname}/${fileBasenameNoExtension}'; else g++ '${file}' -g -o '${fileDirname}/${fileBasenameNoExtension}'; fi"
                ]
            }
        }
    ]
}